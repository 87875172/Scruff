% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/countUMI.R
\name{countUMI}
\alias{countUMI}
\title{Count the number of UMIs for each gene and output expression matrix}
\usage{
countUMI(alignmentFilePaths, reference, format = "BAM", outDir = "./Count",
  cores = max(1, parallel::detectCores()/2), outputPrefix = "countUMI",
  verbose = FALSE, logfilePrefix = format(Sys.time(),
  "\%Y\%m\%d_\%H\%M\%S"))
}
\arguments{
\item{reference}{Can be in one of the following 2 formats:
\itemize{
 \item{"Path to the reference GTF file."}{The TxDb obeject of the GTF file will be generated and saved in the same directory as the GTF file with ".sqlite" suffix.}
 \item{"A TxDb object."}{A TxDb object contains feature information about the reference genome. For more detail, please refer to \code{GenomicFeatures} package.}}}

\item{format}{Format of input sequence alignment files. \strong{"BAM"} or \strong{"SAM"}. Default is \strong{"BAM"}.}

\item{outDir}{Output directory for UMI counting results. UMI corrected count matrix will be stored in this directory. Default is \code{"./Count"}.}

\item{cores}{Number of cores used for parallelization. Default is \code{max(1, parallel::detectCores() / 2)}.}

\item{outputPrefix}{Prefix for expression table filename. Default is \code{"countUMI"}.}

\item{verbose}{Print log messages. Useful for debugging. Default to \strong{FALSE}.}

\item{logfilePrefix}{Prefix for log file. Default is current date and time in the format of \code{format(Sys.time(), "\%Y\%m\%d_\%H\%M\%S")}.}

\item{alignmentFFilePaths}{A character vector of the paths to input alignment files. They can be in SAM or BAM format.}
}
\value{
A expression matrix \code{data.table} object containing the raw counts of unique \emph{UMI:gene} pairs.
}
\description{
Count unique \emph{UMI:gene} pairs for single cell RNA-sequencing alignment files. Write resulting table to output directory. Columns are samples (cells) and rows are gene IDs. The sequence alignment files must be generated using FASTQ files generated by the \code{demultiplex} function in scruff package.
}
